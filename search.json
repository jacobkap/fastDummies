[{"path":"https://jacobkap.github.io/fastDummies/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Jacob Kaplan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jacobkap.github.io/fastDummies/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Kaplan. Author, maintainer. Benjamin Schlegel. Contributor.","code":""},{"path":"https://jacobkap.github.io/fastDummies/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaplan J (2025). fastDummies: Fast Creation Dummy (Binary) Columns Rows Categorical Variables. R package version 1.7.5, https://jacobkap.github.io/fastDummies/, https://github.com/jacobkap/fastDummies.","code":"@Manual{,   title = {fastDummies: Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables},   author = {Jacob Kaplan},   year = {2025},   note = {R package version 1.7.5, https://jacobkap.github.io/fastDummies/},   url = {https://github.com/jacobkap/fastDummies}, }"},{"path":"https://jacobkap.github.io/fastDummies/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","text":"goal fastDummies quickly create dummy variables (columns) dummy rows. Creating dummy variables possible base R packages, package much faster methods.","code":""},{"path":"https://jacobkap.github.io/fastDummies/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","text":"","code":"To install this package, use the code install.packages(\"fastDummies\")   # The development version is available on Github. # install.packages(\"devtools\") devtools::install_github(\"jacobkap/fastDummies\")"},{"path":"https://jacobkap.github.io/fastDummies/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","text":"two functions package: dummy_cols() lets make dummy variables (dummy_columns() clone dummy_cols()) dummy_rows() lets make dummy rows.","code":"library(fastDummies)"},{"path":"https://jacobkap.github.io/fastDummies/index.html","id":"dummy-columns","dir":"","previous_headings":"","what":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","title":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","text":"Dummy variables (binary variables) commonly used statistical analyses simple descriptive statistics. dummy column one value one categorical event occurs zero doesn’t occur. cases feature event/person/object described. example, dummy variable occupation R programmer, can ask, “person R programmer?” answer yes, get value 1, , get value 0. ’ll start simple example go using function dummy_cols(). can also use function dummy_columns() identical dummy_cols(). Imagine data set animals local shelter. One columns data animal : dog cat. make dummy columns data, need produce two new columns. One indicate animal dog, indicate animal cat. row get value 1 column indicating animal , 0 column. function dummy_cols, names new columns concatenated original column separated underscore. example like , fairly easy make dummy columns . dummy_cols() automates process, useful many columns general dummy variables many categories within column. object fastDummies_example two character type columns, one integer column, Date column. default, dummy_cols() make dummy variables factor character columns . cases types data want dummy variables . columns want, function takes data set first parameter returns data.frame newly created variables appended end original data.","code":"fastDummies_example <- data.frame(numbers = 1:3,                     gender  = c(\"male\", \"male\", \"female\"),                     animals = c(\"dog\", \"dog\", \"cat\"),                     dates   = as.Date(c(\"2012-01-01\", \"2011-12-31\",                                           \"2012-01-01\")),                     stringsAsFactors = FALSE) knitr::kable(fastDummies_example) results <- fastDummies::dummy_cols(fastDummies_example) knitr::kable(results)"},{"path":"https://jacobkap.github.io/fastDummies/index.html","id":"dummy-rows","dir":"","previous_headings":"","what":"Dummy Rows","title":"Fast Creation of Dummy (Binary) Columns and Rows from Categorical Variables","text":"dealing data, often missing rows. truly handling missing data far beyond scope package, function dummy_rows() lets add missing rows back data. function takes character, factor, Date columns, finds possible combinations values, adds rows original data set. columns used creating combinations (e.g. numeric) given value NA (unless otherwise specified dummy_value). Lets start simple example. data set four columns: two character, one Date, one numeric. function default use character Date columns creating combinations. First, small amount math explain combinations. column two distinct values - gender: male & female; animals: dog & cat; dates: 2011-12-31 & 2011-12-31. find number possible combinations, multiple number unique values column together. 2 * 2 * 2 = 8.","code":"fastDummies_example <- data.frame(numbers = 1:3,                     gender  = c(\"male\", \"male\", \"female\"),                     animals = c(\"dog\", \"dog\", \"cat\"),                     dates   = as.Date(c(\"2012-01-01\", \"2011-12-31\",                                           \"2012-01-01\")),                     stringsAsFactors = FALSE) knitr::kable(fastDummies_example) results <- fastDummies::dummy_rows(fastDummies_example) knitr::kable(results)"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast creation of dummy variables — dummy_cols","title":"Fast creation of dummy variables — dummy_cols","text":"Quickly create dummy (binary) columns character factor type columns inputted data (numeric columns specified.) function useful statistical analysis want binary columns rather character columns.","code":""},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast creation of dummy variables — dummy_cols","text":"","code":"dummy_cols(   .data,   select_columns = NULL,   remove_first_dummy = FALSE,   remove_most_frequent_dummy = FALSE,   ignore_na = FALSE,   split = NULL,   remove_selected_columns = FALSE,   omit_colname_prefix = FALSE,   return_generated_variables = FALSE )"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast creation of dummy variables — dummy_cols","text":".data object data set want make dummy columns . select_columns Vector column names want create dummy variables . NULL (default), uses character factor columns. remove_first_dummy Removes first dummy every variable n-1 dummies remain. avoids multicollinearity issues models. remove_most_frequent_dummy Removes frequently observed category n-1 dummies remain. tie frequent, remove first (alphabetical order) category tied frequent. ignore_na TRUE, ignores NA values column. FALSE (default), make dummy column value_NA give 1 row NA value. split string split column multiple categories cell. example, variable Pets rows \"cat\", \"dog\", \"turtle\", pets become dummy column. one row \"cat, dog\", split value \",\" row value 1 cat dog dummy columns. remove_selected_columns TRUE (default), removes columns used generate dummy columns. omit_colname_prefix TRUE (default) `length(select_columns) == 1`, omit pre-pending name `select_columns` names newly generated dummy columns return_generated_variables TRUE (default), returns vector names variables generated. modify inputted data.","code":""},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast creation of dummy variables — dummy_cols","text":"data.frame (tibble data.table, depending input data type) number rows inputted data original columns plus newly created dummy columns.","code":""},{"path":[]},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast creation of dummy variables — dummy_cols","text":"","code":"crime <- data.frame(   city = c(\"SF\", \"SF\", \"NYC\"),   year = c(1990, 2000, 1990),   crime = 1:3 ) dummy_cols(crime) #>   city year crime city_NYC city_SF #> 1   SF 1990     1        0       1 #> 2   SF 2000     2        0       1 #> 3  NYC 1990     3        1       0 # Include year column dummy_cols(crime, select_columns = c(\"city\", \"year\")) #>   city year crime city_NYC city_SF year_1990 year_2000 #> 1   SF 1990     1        0       1         1         0 #> 2   SF 2000     2        0       1         0         1 #> 3  NYC 1990     3        1       0         1         0 # Remove first dummy for each pair of dummy columns made dummy_cols(crime,   select_columns = c(\"city\", \"year\"),   remove_first_dummy = TRUE ) #>   city year crime city_SF year_2000 #> 1   SF 1990     1       1         0 #> 2   SF 2000     2       1         1 #> 3  NYC 1990     3       0         0"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast creation of dummy variables — dummy_columns","title":"Fast creation of dummy variables — dummy_columns","text":"dummy_columns() quickly creates dummy (binary) columns character factor type columns inputted data. function useful statistical analysis want binary columns rather character columns.","code":""},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast creation of dummy variables — dummy_columns","text":"","code":"dummy_columns(   .data,   select_columns = NULL,   remove_first_dummy = FALSE,   remove_most_frequent_dummy = FALSE,   ignore_na = FALSE,   split = NULL,   remove_selected_columns = FALSE,   omit_colname_prefix = FALSE,   return_generated_variables = FALSE )"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast creation of dummy variables — dummy_columns","text":".data object data set want make dummy columns . select_columns Vector column names want create dummy variables . NULL (default), uses character factor columns. remove_first_dummy Removes first dummy every variable n-1 dummies remain. avoids multicollinearity issues models. remove_most_frequent_dummy Removes frequently observed category n-1 dummies remain. tie frequent, remove first (alphabetical order) category tied frequent. ignore_na TRUE, ignores NA values column. FALSE (default), make dummy column value_NA give 1 row NA value. split string split column multiple categories cell. example, variable Pets rows \"cat\", \"dog\", \"turtle\", pets become dummy column. one row \"cat, dog\", split value \",\" row value 1 cat dog dummy columns. remove_selected_columns TRUE (default), removes columns used generate dummy columns. omit_colname_prefix TRUE (default) `length(select_columns) == 1`, omit pre-pending name `select_columns` names newly generated dummy columns return_generated_variables TRUE (default), returns vector names variables generated. modify inputted data.","code":""},{"path":[]},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast creation of dummy variables — dummy_columns","text":"","code":"crime <- data.frame(   city = c(\"SF\", \"SF\", \"NYC\"),   year = c(1990, 2000, 1990),   crime = 1:3 ) dummy_cols(crime) #>   city year crime city_NYC city_SF #> 1   SF 1990     1        0       1 #> 2   SF 2000     2        0       1 #> 3  NYC 1990     3        1       0 # Include year column dummy_cols(crime, select_columns = c(\"city\", \"year\")) #>   city year crime city_NYC city_SF year_1990 year_2000 #> 1   SF 1990     1        0       1         1         0 #> 2   SF 2000     2        0       1         0         1 #> 3  NYC 1990     3        1       0         1         0 # Remove first dummy for each pair of dummy columns made dummy_cols(crime,   select_columns = c(\"city\", \"year\"),   remove_first_dummy = TRUE ) #>   city year crime city_SF year_2000 #> 1   SF 1990     1       1         0 #> 2   SF 2000     2       1         1 #> 3  NYC 1990     3       0         0"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast creation of dummy rows — dummy_rows","title":"Fast creation of dummy rows — dummy_rows","text":"dummy_rows() quickly creates dummy rows fill missing rows based combinations available character, factor, date columns (otherwise specified). useful creating balanced panel data. Columns character, factor, dates filled NA (whatever value specify).","code":""},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast creation of dummy rows — dummy_rows","text":"","code":"dummy_rows(   .data,   select_columns = NULL,   dummy_value = NA,   dummy_indicator = FALSE )"},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast creation of dummy rows — dummy_rows","text":".data object data set want make dummy columns . select_columns NULL (default), uses character, factor, Date columns produce categories make dummy rows . NULL, manually enter string vector strings columns name(s). dummy_value Value row columns selected. Default value NA. dummy_indicator Adds binary column say row dummy (.e. included original data )","code":""},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast creation of dummy rows — dummy_rows","text":"data.frame (tibble data.table, depending input data type) number columns inputted data original rows plus newly created dummy rows","code":""},{"path":[]},{"path":"https://jacobkap.github.io/fastDummies/reference/dummy_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast creation of dummy rows — dummy_rows","text":"","code":"crime <- data.frame(city = c(\"SF\", \"SF\", \"NYC\"),     year = c(1990, 2000, 1990),     crime = 1:3)  dummy_rows(crime) #>   city year crime #> 1   SF 1990     1 #> 2   SF 2000     2 #> 3  NYC 1990     3 # Include year column dummy_rows(crime, select_columns = c(\"city\", \"year\")) #>   city year crime #> 1   SF 1990     1 #> 2   SF 2000     2 #> 3  NYC 1990     3 #> 4  NYC 2000    NA # m=Make dummy value 0 dummy_rows(crime, select_columns = c(\"city\", \"year\"),     dummy_value = 0) #>   city year crime #> 1   SF 1990     1 #> 2   SF 2000     2 #> 3  NYC 1990     3 #> 4  NYC 2000     0 # Add a dummy indicator dummy_rows(crime, select_columns = c(\"city\", \"year\"),     dummy_indicator = TRUE) #>   city year crime dummy_indicator #> 1   SF 1990     1               0 #> 2   SF 2000     2               0 #> 3  NYC 1990     3               0 #> 4  NYC 2000    NA               1"},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-175","dir":"Changelog","previous_headings":"","what":"fastDummies 1.7.5","title":"fastDummies 1.7.5","text":"Now includes ordered factors dummy_cols() default. Adds parameter return_generated_variables return vector strings new column names generated dummy_cols().","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-174","dir":"Changelog","previous_headings":"","what":"fastDummies 1.7.4","title":"fastDummies 1.7.4","text":"CRAN release: 2024-08-16 Remove .onAttach message.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-173","dir":"Changelog","previous_headings":"","what":"fastDummies 1.7.3","title":"fastDummies 1.7.3","text":"CRAN release: 2023-07-06 Fix .onAttach message.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-172","dir":"Changelog","previous_headings":"","what":"fastDummies 1.7.2","title":"fastDummies 1.7.2","text":"Adds onattach message.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-170","dir":"Changelog","previous_headings":"","what":"fastDummies 1.7.0","title":"fastDummies 1.7.0","text":"Add option omit colname prefix one column recoded. Thanks @teofiln PR.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-163","dir":"Changelog","previous_headings":"","what":"fastDummies 1.6.3","title":"fastDummies 1.6.3","text":"CRAN release: 2020-11-29 Fix bug inputting vector one column data.frame returned issue. Now convert vector data.frame return . name column “.data_”. Closes #23 @Garyf20. Fix bug remove_most_frequent_dummy wasn’t working right tie value frequent. Closes #22 eden70.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-162","dir":"Changelog","previous_headings":"","what":"fastDummies 1.6.2","title":"fastDummies 1.6.2","text":"CRAN release: 2020-09-16 Dummy columns now returned alphabetical order including numeric order (e.g. photos_2 photos_11).","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-161","dir":"Changelog","previous_headings":"","what":"fastDummies 1.6.1","title":"fastDummies 1.6.1","text":"CRAN release: 2020-03-07 Bug fixes. Dummy columns now returned alphabetical order.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-160","dir":"Changelog","previous_headings":"","what":"fastDummies 1.6.0","title":"fastDummies 1.6.0","text":"CRAN release: 2019-11-29 Adds parameter remove_selected_columns dummy_columns(). TRUE (default), removes columns used create dummy columns.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-150","dir":"Changelog","previous_headings":"","what":"fastDummies 1.5.0","title":"fastDummies 1.5.0","text":"CRAN release: 2019-09-02 Removes sort_columns parameter. Now default order level variable factor type. Fix bug split parameter didn’t work properly. value NA, sets NA dummy column rather value 0. Closes #18 @DLustenBerger.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-141","dir":"Changelog","previous_headings":"","what":"fastDummies 1.4.1","title":"fastDummies 1.4.1","text":"Fix bug column factor type using split parameter. Thanks Matthew Sigal submitting issue GitHub.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-140","dir":"Changelog","previous_headings":"","what":"fastDummies 1.4.0","title":"fastDummies 1.4.0","text":"CRAN release: 2019-06-17 Adds option ignore NA values dummy_cols (doesn’t make variable_NA) column selected. Thanks juribep5 GitHub suggestion. Adds split parameter dummy_cols handle row multiple categories. Thanks Matthew Sigal Andrew Fernandes GitHub suggestion.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-130","dir":"Changelog","previous_headings":"","what":"fastDummies 1.3.0","title":"fastDummies 1.3.0","text":"CRAN release: 2019-04-22 Adds option sort dummy columns following order original factor variable. Thanks Patrick Baylis pull request code feature!","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-120","dir":"Changelog","previous_headings":"","what":"fastDummies 1.2.0","title":"fastDummies 1.2.0","text":"CRAN release: 2018-06-21 Adds option exclude frequently observed category rather first category default. Thanks GitHub user S-suggestion!","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-110","dir":"Changelog","previous_headings":"","what":"fastDummies 1.1.0","title":"fastDummies 1.1.0","text":"CRAN release: 2018-03-03 Thanks GitHub user yu45020 dummy_cols() now >20% faster much memory efficient. dummy_cols() dummy_rows() now return data type inputted e.g. data.frame input returns data.frame, tibble returns tibble. Fix documentation incorrectly said default value new dummy rows 0. fact value NA.","code":""},{"path":"https://jacobkap.github.io/fastDummies/news/index.html","id":"fastdummies-100","dir":"Changelog","previous_headings":"","what":"fastDummies 1.0.0","title":"fastDummies 1.0.0","text":"CRAN release: 2018-01-08 Reduces number parameter previous version. Significant speed increases dummy_cols() dummy_rows() functions. dummy_cols() now accepts numeric columns.","code":""}]
